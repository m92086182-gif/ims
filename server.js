const express = require('express');
const http = require('http');
const socketIo = require('socket.io');
const path = require('path');

const app = express();
const server = http.createServer(app);
const io = socketIo(server);

// ุฎุฏูุฉ ุงููููุงุช ุงูุซุงุจุชุฉ
app.use(express.static(path.join(__dirname, 'public')));

// ุชุฎุฒูู ุงูุฃุฏูู ุงููุชุตููู
const connectedAdmins = new Set();

io.on('connection', (socket) => {
    console.log('๐ค ูุณุชุฎุฏู ูุชุตู:', socket.id);

    // ุนูุฏูุง ูุชุตู ุฃุฏูู
    socket.on('admin_connected', () => {
        connectedAdmins.add(socket.id);
        console.log('๐ก๏ธ ุฃุฏูู ูุชุตู');
    });

    // ุนูุฏูุง ูุฏุฎู ูุณุชุฎุฏู ุฌุฏูุฏ
    socket.on('new_user_login', (userData) => {
        console.log('๐ข ูุณุชุฎุฏู ุฌุฏูุฏ:', userData);
        
        // ุฅุฑุณุงู ุฅุดุนุงุฑ ูุฌููุน ุงูุฃุฏูู
        socket.broadcast.emit('user_joined', {
            id: Date.now(),
            username: userData.username,
            ip: userData.ip || 'ุบูุฑ ูุนุฑูู',
            loginTime: new Date().toLocaleString('ar-EG'),
            userAgent: userData.userAgent
        });
    });

    // ุนูุฏ ุงููุตุงู ูุณุชุฎุฏู
    socket.on('disconnect', () => {
        connectedAdmins.delete(socket.id);
        console.log('โ ูุณุชุฎุฏู ุงููุทุน:', socket.id);
    });
});

const PORT = process.env.PORT || 3000;
server.listen(PORT, () => {
    console.log(`๐ ุงูุณูุฑูุฑ ุดุบุงู ุนูู http://localhost:${PORT}`);
});